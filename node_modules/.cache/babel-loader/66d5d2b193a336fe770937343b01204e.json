{"ast":null,"code":"import { EmitterShapeBase } from \"@tsparticles/plugin-emitters\";\nimport { getRandom } from \"@tsparticles/engine\";\nexport class EmittersCircleShape extends EmitterShapeBase {\n  constructor(position, size, fill, options) {\n    super(position, size, fill, options);\n  }\n  async init() {}\n  async randomPosition() {\n    const size = this.size,\n      fill = this.fill,\n      position = this.position,\n      generateTheta = (x, y) => {\n        const u = getRandom() / 4.0,\n          theta = Math.atan(y / x * Math.tan(2 * Math.PI * u)),\n          v = getRandom();\n        if (v < 0.25) {\n          return theta;\n        } else if (v < 0.5) {\n          return Math.PI - theta;\n        } else if (v < 0.75) {\n          return Math.PI + theta;\n        } else {\n          return -theta;\n        }\n      },\n      radius = (x, y, theta) => x * y / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2),\n      [a, b] = [size.width / 2, size.height / 2],\n      randomTheta = generateTheta(a, b),\n      maxRadius = radius(a, b, randomTheta),\n      randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n    return {\n      position: {\n        x: position.x + randomRadius * Math.cos(randomTheta),\n        y: position.y + randomRadius * Math.sin(randomTheta)\n      }\n    };\n  }\n}","map":{"version":3,"names":["EmitterShapeBase","getRandom","EmittersCircleShape","constructor","position","size","fill","options","init","randomPosition","generateTheta","x","y","u","theta","Math","atan","tan","PI","v","radius","sqrt","cos","sin","a","b","width","height","randomTheta","maxRadius","randomRadius"],"sources":["/Users/josh/Desktop/Portfolio/jjgarcilazo.github.io/node_modules/@tsparticles/plugin-emitters-shape-circle/browser/EmittersCircleShape.js"],"sourcesContent":["import { EmitterShapeBase } from \"@tsparticles/plugin-emitters\";\nimport { getRandom } from \"@tsparticles/engine\";\nexport class EmittersCircleShape extends EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        super(position, size, fill, options);\n    }\n    async init() {\n    }\n    async randomPosition() {\n        const size = this.size, fill = this.fill, position = this.position, generateTheta = (x, y) => {\n            const u = getRandom() / 4.0, theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u)), v = getRandom();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [size.width / 2, size.height / 2], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            position: {\n                x: position.x + randomRadius * Math.cos(randomTheta),\n                y: position.y + randomRadius * Math.sin(randomTheta),\n            },\n        };\n    }\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,SAAS,QAAQ,qBAAqB;AAC/C,OAAO,MAAMC,mBAAmB,SAASF,gBAAgB,CAAC;EACtDG,WAAWA,CAACC,QAAQ,EAAEC,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAE;IACvC,KAAK,CAACH,QAAQ,EAAEC,IAAI,EAAEC,IAAI,EAAEC,OAAO,CAAC;EACxC;EACA,MAAMC,IAAIA,CAAA,EAAG,CACb;EACA,MAAMC,cAAcA,CAAA,EAAG;IACnB,MAAMJ,IAAI,GAAG,IAAI,CAACA,IAAI;MAAEC,IAAI,GAAG,IAAI,CAACA,IAAI;MAAEF,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAAEM,aAAa,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC1F,MAAMC,CAAC,GAAGZ,SAAS,CAAC,CAAC,GAAG,GAAG;UAAEa,KAAK,GAAGC,IAAI,CAACC,IAAI,CAAEJ,CAAC,GAAGD,CAAC,GAAII,IAAI,CAACE,GAAG,CAAC,CAAC,GAAGF,IAAI,CAACG,EAAE,GAAGL,CAAC,CAAC,CAAC;UAAEM,CAAC,GAAGlB,SAAS,CAAC,CAAC;QACpG,IAAIkB,CAAC,GAAG,IAAI,EAAE;UACV,OAAOL,KAAK;QAChB,CAAC,MACI,IAAIK,CAAC,GAAG,GAAG,EAAE;UACd,OAAOJ,IAAI,CAACG,EAAE,GAAGJ,KAAK;QAC1B,CAAC,MACI,IAAIK,CAAC,GAAG,IAAI,EAAE;UACf,OAAOJ,IAAI,CAACG,EAAE,GAAGJ,KAAK;QAC1B,CAAC,MACI;UACD,OAAO,CAACA,KAAK;QACjB;MACJ,CAAC;MAAEM,MAAM,GAAGA,CAACT,CAAC,EAAEC,CAAC,EAAEE,KAAK,KAAMH,CAAC,GAAGC,CAAC,GAAIG,IAAI,CAACM,IAAI,CAAC,CAACT,CAAC,GAAGG,IAAI,CAACO,GAAG,CAACR,KAAK,CAAC,KAAK,CAAC,GAAG,CAACH,CAAC,GAAGI,IAAI,CAACQ,GAAG,CAACT,KAAK,CAAC,KAAK,CAAC,CAAC;MAAE,CAACU,CAAC,EAAEC,CAAC,CAAC,GAAG,CAACpB,IAAI,CAACqB,KAAK,GAAG,CAAC,EAAErB,IAAI,CAACsB,MAAM,GAAG,CAAC,CAAC;MAAEC,WAAW,GAAGlB,aAAa,CAACc,CAAC,EAAEC,CAAC,CAAC;MAAEI,SAAS,GAAGT,MAAM,CAACI,CAAC,EAAEC,CAAC,EAAEG,WAAW,CAAC;MAAEE,YAAY,GAAGxB,IAAI,GAAGuB,SAAS,GAAGd,IAAI,CAACM,IAAI,CAACpB,SAAS,CAAC,CAAC,CAAC,GAAG4B,SAAS;IACrS,OAAO;MACHzB,QAAQ,EAAE;QACNO,CAAC,EAAEP,QAAQ,CAACO,CAAC,GAAGmB,YAAY,GAAGf,IAAI,CAACO,GAAG,CAACM,WAAW,CAAC;QACpDhB,CAAC,EAAER,QAAQ,CAACQ,CAAC,GAAGkB,YAAY,GAAGf,IAAI,CAACQ,GAAG,CAACK,WAAW;MACvD;IACJ,CAAC;EACL;AACJ"},"metadata":{},"sourceType":"module"}