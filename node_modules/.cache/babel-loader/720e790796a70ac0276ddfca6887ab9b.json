{"ast":null,"code":"import { getStyleFromRgb } from \"./ColorUtils.js\";\nexport function drawLine(context, begin, end) {\n  context.beginPath();\n  context.moveTo(begin.x, begin.y);\n  context.lineTo(end.x, end.y);\n  context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n  context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n  context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n  if (!image) {\n    return;\n  }\n  context.globalAlpha = opacity;\n  context.drawImage(image, 0, 0, dimension.width, dimension.height);\n  context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n  context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n  const {\n    container,\n    context,\n    particle,\n    delta,\n    colorStyles,\n    backgroundMask,\n    composite,\n    radius,\n    opacity,\n    shadow,\n    transform\n  } = data;\n  const pos = particle.getPosition(),\n    angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0),\n    rotateData = {\n      sin: Math.sin(angle),\n      cos: Math.cos(angle)\n    },\n    transformData = {\n      a: rotateData.cos * (transform.a ?? 1),\n      b: rotateData.sin * (transform.b ?? 1),\n      c: -rotateData.sin * (transform.c ?? 1),\n      d: rotateData.cos * (transform.d ?? 1)\n    };\n  context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n  if (backgroundMask) {\n    context.globalCompositeOperation = composite;\n  }\n  const shadowColor = particle.shadowColor;\n  if (shadow.enable && shadowColor) {\n    context.shadowBlur = shadow.blur;\n    context.shadowColor = getStyleFromRgb(shadowColor);\n    context.shadowOffsetX = shadow.offset.x;\n    context.shadowOffsetY = shadow.offset.y;\n  }\n  if (colorStyles.fill) {\n    context.fillStyle = colorStyles.fill;\n  }\n  const strokeWidth = particle.strokeWidth ?? 0;\n  context.lineWidth = strokeWidth;\n  if (colorStyles.stroke) {\n    context.strokeStyle = colorStyles.stroke;\n  }\n  const drawData = {\n    container,\n    context,\n    particle,\n    radius,\n    opacity,\n    delta,\n    transformData\n  };\n  context.beginPath();\n  drawShape(drawData);\n  if (particle.shapeClose) {\n    context.closePath();\n  }\n  if (strokeWidth > 0) {\n    context.stroke();\n  }\n  if (particle.shapeFill) {\n    context.fill();\n  }\n  drawShapeAfterDraw(drawData);\n  drawEffect(drawData);\n  context.globalCompositeOperation = \"source-over\";\n  context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawEffect(data) {\n  const {\n    container,\n    context,\n    particle,\n    radius,\n    opacity,\n    delta,\n    transformData\n  } = data;\n  if (!particle.effect) {\n    return;\n  }\n  const drawer = container.effectDrawers.get(particle.effect);\n  if (!drawer) {\n    return;\n  }\n  drawer.draw({\n    context,\n    particle,\n    radius,\n    opacity,\n    delta,\n    pixelRatio: container.retina.pixelRatio,\n    transformData: {\n      ...transformData\n    }\n  });\n}\nexport function drawShape(data) {\n  const {\n    container,\n    context,\n    particle,\n    radius,\n    opacity,\n    delta,\n    transformData\n  } = data;\n  if (!particle.shape) {\n    return;\n  }\n  const drawer = container.shapeDrawers.get(particle.shape);\n  if (!drawer) {\n    return;\n  }\n  drawer.draw({\n    context,\n    particle,\n    radius,\n    opacity,\n    delta,\n    pixelRatio: container.retina.pixelRatio,\n    transformData: {\n      ...transformData\n    }\n  });\n}\nexport function drawShapeAfterDraw(data) {\n  const {\n    container,\n    context,\n    particle,\n    radius,\n    opacity,\n    delta,\n    transformData\n  } = data;\n  if (!particle.shape) {\n    return;\n  }\n  const drawer = container.shapeDrawers.get(particle.shape);\n  if (!drawer || !drawer.afterDraw) {\n    return;\n  }\n  drawer.afterDraw({\n    context,\n    particle,\n    radius,\n    opacity,\n    delta,\n    pixelRatio: container.retina.pixelRatio,\n    transformData: {\n      ...transformData\n    }\n  });\n}\nexport function drawPlugin(context, plugin, delta) {\n  if (!plugin.draw) {\n    return;\n  }\n  plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n  if (!plugin.drawParticle) {\n    return;\n  }\n  plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n  return {\n    h: color.h,\n    s: color.s,\n    l: color.l + (type === \"darken\" ? -1 : 1) * value\n  };\n}","map":{"version":3,"names":["getStyleFromRgb","drawLine","context","begin","end","beginPath","moveTo","x","y","lineTo","closePath","paintBase","dimension","baseColor","fillStyle","fillRect","width","height","paintImage","image","opacity","globalAlpha","drawImage","clear","clearRect","drawParticle","data","container","particle","delta","colorStyles","backgroundMask","composite","radius","shadow","transform","pos","getPosition","angle","rotation","pathRotation","velocity","rotateData","sin","Math","cos","transformData","a","b","c","d","setTransform","globalCompositeOperation","shadowColor","enable","shadowBlur","blur","shadowOffsetX","offset","shadowOffsetY","fill","strokeWidth","lineWidth","stroke","strokeStyle","drawData","drawShape","shapeClose","shapeFill","drawShapeAfterDraw","drawEffect","effect","drawer","effectDrawers","get","draw","pixelRatio","retina","shape","shapeDrawers","afterDraw","drawPlugin","plugin","drawParticlePlugin","alterHsl","color","type","value","h","s","l"],"sources":["/Users/josh/Desktop/Portfolio/jjgarcilazo.github.io/node_modules/@tsparticles/engine/browser/Utils/CanvasUtils.js"],"sourcesContent":["import { getStyleFromRgb } from \"./ColorUtils.js\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    const drawData = { container, context, particle, radius, opacity, delta, transformData };\n    context.beginPath();\n    drawShape(drawData);\n    if (particle.shapeClose) {\n        context.closePath();\n    }\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.shapeFill) {\n        context.fill();\n    }\n    drawShapeAfterDraw(drawData);\n    drawEffect(drawData);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawEffect(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.effect) {\n        return;\n    }\n    const drawer = container.effectDrawers.get(particle.effect);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShape(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawShapeAfterDraw(data) {\n    const { container, context, particle, radius, opacity, delta, transformData } = data;\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.shapeDrawers.get(particle.shape);\n    if (!drawer || !drawer.afterDraw) {\n        return;\n    }\n    drawer.afterDraw({\n        context,\n        particle,\n        radius,\n        opacity,\n        delta,\n        pixelRatio: container.retina.pixelRatio,\n        transformData: { ...transformData },\n    });\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}